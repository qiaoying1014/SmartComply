@model SmartComply.ViewModels.CorrectiveActionViewModel

@{
    ViewData["Title"] = "Add Corrective Actions";
}

<head>
	<!-- Flatpickr CSS -->
	<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">

	<!-- Flatpickr JS -->
	<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
</head>

<div class="card">
    <!-- Breadcrumb Navigation -->
    <div class="card-header p-5">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Admin")" class="btn btn-link text-primary p-0">Home</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("MyAuditSummary", "Audit")" class="btn btn-link text-primary p-0">My Audit Summary</a></li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "CorrectiveAction", new { auditId = ViewBag.AuditId })" class="btn btn-link text-primary p-0">
                        Corrective Action Management
                    </a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">Add Corrective Action</li>
            </ol>
        </nav>
    </div>

    <div class="row">
        <div class="col-xl">
            <div class="card mb-6">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Add Corrective Action</h5>
                </div>

                <div class="card-body">
                    <form id="addCorrectiveActionForm" asp-action="Add" method="post" enctype="multipart/form-data" autocomplete="off">
                        @* Hidden AuditId passed from the list page *@
                        <input asp-for="AuditId" type="hidden" />

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter description..." autocomplete="off"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="RootCause" class="form-label">Root Cause</label>
                            <textarea asp-for="RootCause" class="form-control" rows="2" placeholder="Enter root cause..." autocomplete="off"></textarea>
                            <span asp-validation-for="RootCause" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ProposedAction" class="form-label">Proposed Action</label>
                            <textarea asp-for="ProposedAction" class="form-control" rows="3" placeholder="Enter proposed action..." autocomplete="off"></textarea>
                            <span asp-validation-for="ProposedAction" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ResponsiblePerson" class="form-label">Responsible Person</label>
                            <input asp-for="ResponsiblePerson" class="form-control" placeholder="Enter responsible person..." autocomplete="off" />
                            <span asp-validation-for="ResponsiblePerson" class="text-danger"></span>
                        </div>

                        <div class="row g-3 mb-3">
                            <div class="col-md-4">
                                <label asp-for="TargetDate" class="form-label">Target Date</label>
								<input asp-for="TargetDate" type="date" class="form-control" id="TargetDatePicker" />
                                <span asp-validation-for="TargetDate" class="text-danger"></span>
								<span class="form-text">Target Date cannot be changed after created.</span>
                            </div>
							<div class="col-md-4">
								<label asp-for="Status" class="form-label">Status</label>
								<select asp-for="Status" class="form-select">
									@foreach (var status in Enum.GetValues(typeof(SmartComply.Models.CorrectiveActionStatus)))
									{
										if ((SmartComply.Models.CorrectiveActionStatus)status == SmartComply.Models.CorrectiveActionStatus.Pending ||
										(SmartComply.Models.CorrectiveActionStatus)status == SmartComply.Models.CorrectiveActionStatus.InProgress)
										{
											<option value="@status">@status</option>
										}
									}
								</select>
								<span asp-validation-for="Status" class="text-danger"></span>
							</div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Remarks" class="form-label">Remarks</label>
                            <textarea asp-for="Remarks" class="form-control" rows="2" placeholder="Additional remarks..." autocomplete="off"></textarea>
                            <span asp-validation-for="Remarks" class="text-danger"></span>
                        </div>

                        <hr />

                        <div class="mb-3">
                            <label asp-for="BeforePhotoUpload" class="form-label">Before Photo</label>
                            <input asp-for="BeforePhotoUpload" type="file" class="form-control" accept=".jpg,.jpeg,.png,.gif" id="BeforePhotoUpload" />
                            <span asp-validation-for="BeforePhotoUpload" class="text-danger"></span>
                            <div class="mt-2">
                                <img id="beforePreview" class="img-fluid border" style="max-width: 200px; display: none;" alt="Before Photo Preview" />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="AfterPhotoUpload" class="form-label">After Photo</label>
                            <input asp-for="AfterPhotoUpload" type="file" class="form-control" accept=".jpg,.jpeg,.png,.gif" id="AfterPhotoUpload" />
                            <span asp-validation-for="AfterPhotoUpload" class="text-danger"></span>
                            <div class="mt-2">
                                <img id="afterPreview" class="img-fluid border" style="max-width: 200px; display: none;" alt="After Photo Preview" />
                            </div>
                        </div>

                        <!-- Reset, Sync, and Save buttons -->
                        <div>
                            <button id="resetBtn" type="button" class="btn btn-outline-secondary" data-bs-toggle="tooltip" data-bs-placement="top" title="Reset the form and clear any changes made">Reset</button>
							<!-- <button id="syncOfflineBtn" type="button" class="btn btn-warning" data-bs-toggle="tooltip" data-bs-placement="top" title="Sync offline changes to this form">Sync Offline Records</button> -->
                            <button id="saveBtn" type="button" class="btn btn-primary" data-bs-toggle="tooltip" data-bs-placement="top" title="Save the form changes">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Confirmation -->
    <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalLabel">Confirm Action</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to <span id="confirmationAction">perform this action</span>?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="confirmActionBtn">Confirm</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="/js/idb-keyval-iife.min.js"></script>
    <script>
        // Wait until DOM is fully loaded
        document.addEventListener('DOMContentLoaded', function () {

            // Photo preview handlers
            document.getElementById("BeforePhotoUpload").addEventListener("change", function (event) {
                const fileInput = event.target;
                const imgPreview = document.getElementById("beforePreview");

                if (fileInput.files && fileInput.files[0]) {
                    imgPreview.src = URL.createObjectURL(fileInput.files[0]);
                    imgPreview.style.display = "block";
                } else {
                    imgPreview.src = "";
                    imgPreview.style.display = "none";
                }
            });

            document.getElementById("AfterPhotoUpload").addEventListener("change", function (event) {
                const fileInput = event.target;
                const imgPreview = document.getElementById("afterPreview");

                if (fileInput.files && fileInput.files[0]) {
                    imgPreview.src = URL.createObjectURL(fileInput.files[0]);
                    imgPreview.style.display = "block";
                } else {
                    imgPreview.src = "";
                    imgPreview.style.display = "none";
                }
            });

            // Confirmation Modal Logic
            document.getElementById('saveBtn').onclick = function() {
                showConfirmationModal('save');
            };

            document.getElementById('resetBtn').onclick = function(event) {
                event.preventDefault(); // Prevent default reset action
                showConfirmationModal('reset');
            };

            document.getElementById('syncOfflineBtn').onclick = function() {
                showConfirmationModal('sync');
            };

            function showConfirmationModal(actionType) {
                var modal = new bootstrap.Modal(document.getElementById('confirmationModal'));
                document.getElementById('confirmationAction').textContent = actionType;

                // Show the modal
                modal.show();

                // Handle confirmation
                document.getElementById('confirmActionBtn').onclick = function() {
                    if (actionType === 'save') {
                        document.getElementById('addCorrectiveActionForm').submit();
                    } else if (actionType === 'reset') {
                        document.getElementById('addCorrectiveActionForm').reset();
                    } else if (actionType === 'sync') {
                        syncOfflineCorrectiveActions();
                    }
                    modal.hide(); // Close the modal
                }
            }

            async function syncOfflineCorrectiveActions() {
                const allKeys = await idbKeyval.keys();
                for (const key of allKeys) {
                    if (!key.startsWith('ca-')) continue;
                    const data = await idbKeyval.get(key);

                    const response = await fetch('/CorrectiveAction/OfflineSync', {
                        method: 'POST',
                        headers: {'Content-Type': 'application/json'},
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {
                        await idbKeyval.del(key);
                        console.log('Successfully synced:', key);
                    } else {
                        console.error('Failed to sync:', key, response.status);
                    }
                }
            }
        });

		flatpickr("#TargetDatePicker", {
			dateFormat: "Y-m-d",
			minDate: "today" // or leave out if you allow past dates
		});
    </script>
}
